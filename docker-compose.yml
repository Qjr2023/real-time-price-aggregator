version: '3.8'
services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - price-aggregator-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  exchange1:
    build:
      context: .
      dockerfile: mocks/Dockerfile
    command: ./mock_server 8081 exchange1
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - price-aggregator-network

  exchange2:
    build:
      context: .
      dockerfile: mocks/Dockerfile
    command: ./mock_server 8082 exchange2
    ports:
      - "8082:8082"
    depends_on:
      - redis
    networks:
      - price-aggregator-network

  exchange3:
    build:
      context: .
      dockerfile: mocks/Dockerfile
    command: ./mock_server 8083 exchange3
    ports:
      - "8083:8083"
    depends_on:
      - redis
    networks:
      - price-aggregator-network

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - exchange1
      - exchange2
      - exchange3
    networks:
      - price-aggregator-network
    environment:
      - AWS_REGION=us-west-2
    volumes:
      - ~/.aws:/root/.aws:ro 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - price-aggregator-network
    depends_on:
      - server

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - price-aggregator-network
    depends_on:
      - prometheus

networks:
  price-aggregator-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: